<launch>                                                                        
  <!-- launch video stream -->
  <include file="$(find video_stream_opencv)/launch/camera.launch" >
        <!-- node name and ros graph name -->
        <arg name="camera_name" value="pixel2_ipcam" />
        <!-- set buffer queue size of frame capturing to -->
        <arg name="buffer_queue_size" value="100" />
        <arg name="set_camera_fps" value="1"/>
        <!-- throttling the querying of frames to -->
        <arg name="fps" value="1" />
        <!-- setting frame_id -->
        <arg name="frame_id" value="camera" />
        <!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:
        "file:///$(find your_camera_package)/config/your_camera.yaml" -->
        <arg name="video_stream_provider" value="rtsp://admin:admin@192.168.1.126:8554/live" />
        <!-- flip the image horizontally (mirror it) -->
        <arg name="flip_horizontal" value="false" />
        <!-- flip the image vertically -->
        <arg name="flip_vertical" value="false" />
        <!-- visualize on an image_view window the stream generated -->
        <arg name="visualize" value="false" />
  </include>
  <arg name="marker_size" default="5" />
  <arg name="max_new_marker_error" default="0.2" />
  <arg name="max_track_error" default="0.2" />

  <arg name="cam_image_topic" default="/pixel2_ipcam/image_raw" />
  <arg name="cam_info_topic" default="/pixel2_ipcam/camera_info" />
  <arg name="output_frame" default="/camera" />

  <node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen">
    <param name="marker_size"           type="double" value="$(arg marker_size)" />
    <param name="max_new_marker_error"  type="double" value="$(arg max_new_marker_error)" />
    <param name="max_track_error"       type="double" value="$(arg max_track_error)" />
    <param name="output_frame"          type="string" value="$(arg output_frame)" />
    <remap from="camera_image"  to="$(arg cam_image_topic)" />
    <remap from="camera_info"   to="$(arg cam_info_topic)" />
  </node>

  <node name="framer1" pkg="ar_framer" type="align_frame" respawn="false" output="screen">
    <param name="input_image"          type="string" value="$(arg cam_image_topic)" />
    <param name="camera_info"          type="string" value="$(arg cam_info_topic)" />
  </node>
</launch>